{"version":3,"sources":["service/index.js","components/home/Home.jsx","components/moviedetail/MovieDetail.jsx","App.js","index.js"],"names":["apiKey","url","nowPlayingUrl","topRatedUrl","movieUrl","genreUrl","moviesUrl","personUrl","fetchMovies","a","axios","get","params","api_key","language","page","data","posterUrl","modifiedData","map","m","id","backPoster","popularity","title","poster","overview","rating","fetchGenre","g","name","fetchMovieByGenre","genre_id","with_genres","fetchPersons","p","profileImg","known","fetchTopRatedMovie","fetchMovieDetail","fetchMovieVideos","fetchCasts","c","character","img","fetchSimilarMovie","Home","useState","nowPlaying","setNowPlaying","genres","setGenres","movieByGenre","setMovieByGenre","persons","setPersons","topRated","setTopRated","useEffect","fetchAPI","handleGenreClick","movies","slice","item","index","style","height","width","className","src","alt","textAlign","fontSize","genreList","type","onClick","movieList","to","fontWeight","count","size","color1","trendingPersons","i","color","topRatedList","autoPlay","pauseOnVisibility","slidesshowSpeed","version","indicators","borderTop","MovieDetail","match","isOpen","setIsOpen","detail","setDetail","video","setVideo","casts","setCasts","similarMovie","setSimilarMovie","genresList","MoviePlayerModal","props","Modal","centered","Header","closeButton","Title","Body","backgroundColor","key","playing","castList","similarMovieList","show","onHide","backdrop_path","cursor","vote_average","release_date","runtime","budget","homepage","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"+OAEMA,EAAS,mCACTC,EAAK,+BACLC,EAAa,UAAMD,EAAN,sBACbE,EAAW,UAAMF,EAAN,oBACXG,EAAQ,UAAKH,EAAL,UACRI,EAAQ,UAAKJ,EAAL,qBACRK,EAAS,UAAKL,EAAL,mBACTM,EAAS,UAAKN,EAAL,yBAEFO,EAAW,uCAAG,kCAAAC,EAAA,+EAEEC,IAAMC,IAAIT,EAAe,CAC1CU,OAAQ,CACJC,QAASb,EACTc,SAAU,QACVC,KAAM,KANK,uBAEZC,EAFY,EAEZA,KAQDC,EAAY,uCACZC,EAAeF,EAAI,QAAYG,KAAI,SAACC,GAAD,MAAQ,CAC7CC,GAAID,EAAC,GACLE,WAAYL,EAAYG,EAAC,cACzBG,WAAYH,EAAC,WACbI,MAAOJ,EAAC,MACRK,OAAQR,EAAYG,EAAC,YACrBM,SAAUN,EAAC,SACXO,OAAQP,EAAC,iBAlBM,kBAqBZF,GArBY,4FAAH,qDAyBXU,EAAU,uCAAG,gCAAAnB,EAAA,+EAEGC,IAAMC,IAAIN,EAAU,CACrCO,OAAQ,CACJC,QAASb,EACTc,SAAU,QACVC,KAAM,KANI,uBAEXC,EAFW,EAEXA,KAODE,EAAeF,EAAI,OAAWG,KAAI,SAACU,GAAD,MAAO,CAC3CR,GAAIQ,EAAC,GACLC,KAAMD,EAAC,SAXO,kBAaXX,GAbW,yFAAH,qDAiBVa,EAAiB,uCAAG,WAAOC,GAAP,qBAAAvB,EAAA,+EAEJC,IAAMC,IAAIL,EAAW,CACtCM,OAAQ,CACJC,QAASb,EACTc,SAAU,QACVC,KAAM,EACNkB,YAAaD,KAPI,uBAElBhB,EAFkB,EAElBA,KASDC,EAAY,uCACZC,EAAeF,EAAI,QAAYG,KAAI,SAACC,GAAD,MAAQ,CAC7CC,GAAID,EAAC,GACLE,WAAYL,EAAYG,EAAC,cACzBG,WAAYH,EAAC,WACbI,MAAOJ,EAAC,MACRK,OAAQR,EAAYG,EAAC,YACrBM,SAAUN,EAAC,SACXO,OAAQP,EAAC,iBAnBY,kBAsBlBF,GAtBkB,4FAAH,sDA0BjBgB,EAAY,uCAAI,gCAAAzB,EAAA,+EAEAC,IAAMC,IAAIJ,EAAW,CACtCK,OAAQ,CACJC,QAASb,KAJI,uBAEdgB,EAFc,EAEdA,KAKDE,EAAeF,EAAI,QAAYG,KAAI,SAACgB,GAAD,MAAM,CAC3Cd,GAAIc,EAAC,GACLZ,WAAYY,EAAC,WACbL,KAAMK,EAAC,KACPC,WAAY,kCAAoCD,EAAC,aACjDE,MAAOF,EAAC,yBAZS,kBAedjB,GAfc,yFAAJ,qDAmBZoB,EAAkB,uCAAG,kCAAA7B,EAAA,+EAELC,IAAMC,IAAIR,EAAa,CACxCS,OAAQ,CACJC,QAASb,EACTc,SAAU,QACVC,KAAM,KANY,uBAEnBC,EAFmB,EAEnBA,KAODC,EAAY,uCACZC,EAAeF,EAAI,QAAYG,KAAI,SAACC,GAAD,MAAQ,CAC7CC,GAAID,EAAC,GACLE,WAAYL,EAAYG,EAAC,cACzBG,WAAYH,EAAC,WACbI,MAAOJ,EAAC,MACRK,OAAQR,EAAYG,EAAC,YACrBM,SAAUN,EAAC,SACXO,OAAQP,EAAC,iBAjBa,kBAoBnBF,GApBmB,4FAAH,qDA0BlBqB,EAAgB,uCAAG,WAAOlB,GAAP,iBAAAZ,EAAA,+EAEHC,IAAMC,IAAN,UAAaP,EAAb,YAAyBiB,GAAO,CACjDT,OAAQ,CACJC,QAASb,EACTc,SAAU,WALM,uBAEjBE,EAFiB,EAEjBA,KAFiB,kBAQjBA,GARiB,yFAAH,sDAYhBwB,EAAgB,uCAAG,WAAOnB,GAAP,iBAAAZ,EAAA,+EAEHC,IAAMC,IAAN,UAAaP,EAAb,YAAyBiB,EAAzB,WAAsC,CACvDT,OAAQ,CACJC,QAASb,KAJO,uBAEjBgB,EAFiB,EAEjBA,KAFiB,kBAOjBA,EAAI,QAAa,IAPA,yFAAH,sDAWhByB,EAAU,uCAAG,WAAOpB,GAAP,mBAAAZ,EAAA,+EAEGC,IAAMC,IAAN,UAAaP,EAAb,YAAyBiB,EAAzB,YAAuC,CACxDT,OAAQ,CACJC,QAASb,KAJC,uBAEXgB,EAFW,EAEXA,KAKDE,EAAeF,EAAI,KAASG,KAAI,SAACuB,GAAD,MAAO,CACzCrB,GAAIqB,EAAC,QACLC,UAAWD,EAAC,UACZZ,KAAMY,EAAC,KACPE,IAAK,kCAAoCF,EAAC,iBAX5B,kBAeXxB,GAfW,yFAAH,sDAmBV2B,EAAiB,uCAAG,WAAOxB,GAAP,qBAAAZ,EAAA,+EAEJC,IAAMC,IAAN,UAAaP,EAAb,YAAyBiB,EAAzB,YAAuC,CACxDT,OAAQ,CACJC,QAASb,EACTc,SAAU,WALO,uBAElBE,EAFkB,EAElBA,KAODC,EAAY,uCACZC,EAAeF,EAAI,QAAYG,KAAI,SAACC,GAAD,MAAQ,CAC7CC,GAAID,EAAC,GACLE,WAAYL,EAAYG,EAAC,cACzBG,WAAYH,EAAC,WACbI,MAAOJ,EAAC,MACRK,OAAQR,EAAYG,EAAC,YACrBM,SAAUN,EAAC,SACXO,OAAQP,EAAC,iBAjBY,kBAoBlBF,GApBkB,4FAAH,sD,wCCzJvB,SAAS4B,IAEZ,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,YACQ,uCAAG,sBAAAjD,EAAA,kEACbwC,EADa,SACOzC,IADP,8CAEb2C,EAFa,SAEGvB,IAFH,8CAGbyB,EAHa,UAGStB,EAAkB,IAH3B,+CAIbwB,EAJa,UAIIrB,IAJJ,+CAKbuB,EALa,UAKKnB,IALL,+EAAH,qDAQdqB,KACF,IAEF,IAAMC,EAAgB,uCAAG,WAAO5B,GAAP,SAAAvB,EAAA,kEACrB4C,EADqB,SACCtB,EAAkBC,GADnB,6EAAH,sDAIhB6B,EAASb,EAAWc,MAAM,EAAG,IAAI3C,KAAI,SAAC4C,EAAMC,GAE9C,OACI,sBAAKC,MAAQ,CAAEC,OAAQ,IAAKC,MAAO,QAAnC,UACI,qBAAKC,UAAW,kBAAhB,SACI,qBAAKH,MAAQ,CAACC,OAAQ,IAAKC,MAAO,KAAOE,IAAMN,EAAKzC,WAAYgD,IAAMP,EAAKvC,UAG9E,qBAAK4C,UAAW,oBAGjB,qBAAKA,UAAW,mBACXH,MAAO,CAACM,UAAW,SAAUC,SAAU,IAD5C,SAGST,EAAKvC,UAXiCwC,MAmBrDS,EAAYvB,EAAO/B,KAAI,SAAC4C,EAAMC,GAChC,OACI,oBAAII,UAAW,mBAAf,SACI,wBACIM,KAAM,SACNN,UAAW,uBACXO,QAAS,WACPf,EAAiBG,EAAK1C,KAJ5B,SAMK0C,EAAKjC,QAPyBkC,MAezCY,EAAYxB,EAAaU,MAAM,EAAG,GAAG3C,KAAI,SAAC4C,EAAMC,GAClD,OACI,sBAAKI,UAAW,oBAAhB,UACI,qBAAKA,UAAW,OAAhB,SACI,cAAC,IAAD,CAAMS,GAAE,iBAAad,EAAK1C,IAA1B,SACI,qBAAK+C,UAAW,YAAYC,IAAKN,EAAKtC,OAAQ6C,IAAKP,EAAKvC,YAIhE,sBAAK4C,UAAW,OAAhB,UACI,mBAAGH,MAAQ,CAACa,WAAY,UAAxB,SAAoCf,EAAKvC,QACzC,6CAAgBuC,EAAKpC,UACrB,cAAC,IAAD,CACAoD,MAAOhB,EAAKpC,OACZqD,KAAM,GACNC,OAAQ,iBAbyBjB,MAsB3CkB,EAAkB5B,EAAQQ,MAAM,EAAG,GAAG3C,KAAI,SAACgB,EAAGgD,GAChD,OACI,sBAAKf,UAAW,uBAAhB,UACI,qBAAKA,UAAW,2CAChBC,IAAKlC,EAAEC,WACPkC,IAAKnC,EAAEL,OAEP,mBAAGsC,UAAW,+BAAd,SAA8CjC,EAAEL,OAChD,oBAAGsC,UAAW,gCAAgCH,MAAO,CAACmB,MAAM,WAA5D,0BACkBjD,EAAEE,WAPoB8C,MAc9CE,EAAe7B,EAASM,MAAM,EAAG,GAAG3C,KAAI,SAAC4C,EAAMC,GACjD,OACI,sBAAKI,UAAW,YAAhB,UACI,qBAAKA,UAAW,OAAhB,SACI,cAAC,IAAD,CAAMS,GAAE,iBAAYd,EAAK1C,IAAzB,SACI,qBAAK+C,UAAW,YAAYC,IAAKN,EAAKtC,OAAQ6C,IAAKP,EAAKvC,YAIhE,sBAAK4C,UAAW,OAAhB,UACI,mBAAGH,MAAQ,CAACa,WAAY,UAAxB,SAAoCf,EAAKvC,QACzC,6CAAgBuC,EAAKpC,UACrB,cAAC,IAAD,CACAoD,MAAOhB,EAAKpC,OACZqD,KAAM,GACNC,OAAQ,iBAbiBjB,MAsBzC,OACI,sBAAKI,UAAW,YAAhB,UACI,qBAAKA,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,cAAC,WAAD,CACIkB,UAAU,EACVC,mBAAmB,EACnBC,gBAAiB,IACjBC,QAAS,EACTC,YAAa,EALjB,SAOK7B,QAOb,qBAAKO,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,oBAAIA,UAAW,cAAf,SAA8BK,QAMtC,qBAAKL,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,qBAAKA,UAAW,cAAhB,SACI,mBAAGA,UAAW,wCAO1B,qBAAKA,UAAW,WAAhB,SAA4BQ,IAE5B,qBAAKR,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,mBAAGA,UAAW,mBAAmBH,MAAO,CAACmB,MAAM,WAA/C,+CAOR,qBAAKhB,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,qBAAKA,UAAW,cAAhB,SACI,mBAAGA,UAAW,wCAQ1B,qBAAKA,UAAW,WAAhB,SACKc,IAEL,qBAAKd,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,mBAAGA,UAAW,mBAAmBH,MAAO,CAACmB,MAAM,WAA/C,kCAOR,qBAAKhB,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,qBAAKA,UAAW,cAAhB,SACI,mBAAGA,UAAW,wCAO1B,qBAAKA,UAAW,6CAAhB,SAA8DiB,IAE9D,oBAAIjB,UAAW,OAAOH,MAAO,CAAC0B,UAAW,uBACzC,qBAAKvB,UAAW,WAAhB,SACI,qBAAKA,UAAW,oBAAoBH,MAAO,CAACmB,MAAM,WAAlD,SACI,kEAYLtC,I,kCCrOR,SAAS8C,EAAT,GAAiC,IAChChF,EAD+B,EAARiF,MACRjF,OACfsC,EAAS,GACb,EAA4BH,oBAAS,GAArC,mBAAO+C,EAAP,KAAeC,EAAf,KACA,EAA4BhD,mBAAS,IAArC,mBAAOiD,EAAP,KAAeC,EAAf,KACA,EAA0BlD,mBAAS,IAAnC,mBAAOmD,EAAP,KAAcC,EAAd,KACA,EAA0BpD,mBAAS,IAAnC,mBAAOqD,EAAP,KAAcC,EAAd,KACA,EAAwCtD,mBAAS,IAAjD,mBAAOuD,EAAP,KAAqBC,EAArB,KAEA7C,qBAAU,YACQ,uCAAG,sBAAAjD,EAAA,kEACbwF,EADa,SACG1D,EAAiB3B,EAAOS,IAD3B,8CAEb8E,EAFa,SAEE3D,EAAiB5B,EAAOS,IAF1B,8CAGbgF,EAHa,UAGE5D,EAAW7B,EAAOS,IAHpB,+CAIbkF,EAJa,UAIS1D,EAAkBjC,EAAOS,IAJlC,+EAAH,qDAMdsC,KACD,CAAC/C,EAAOS,KAKX,IAiCImF,EAjCEC,EAAmB,SAACC,GAEtB,OACI,eAACC,EAAA,EAAD,2BACID,GADJ,IAEA1B,KAAK,KACL,kBAAgB,gCAChB4B,UAAQ,EAJR,UAMI,cAACD,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,CACI1F,GAAG,gCACH4C,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAF1C,SAIKkB,EAAOxE,UAIhB,cAACmF,EAAA,EAAMK,KAAP,CAAY/C,MAAO,CAACgD,gBAAiB,WAArC,SACI,cAAC,IAAD,CACI7C,UAAW,kBACXnE,IApBG,mCAoBeiG,EAAMgB,IACxBC,SAAO,EACPhD,MAAM,iBA1B1BjB,EAAS8C,EAAO9C,UAsCZsD,EAAatD,EAAO/B,KAAI,SAACU,EAAGsD,GACxB,OACI,oBAAIf,UAAW,mBAAf,SACA,wBACIM,KAAK,SACLN,UAAW,uBAFf,SAGSvC,EAAEC,QAJ4BqD,OAanD,IAAMiC,EAAWhB,EAAMtC,MAAM,EAAG,GAAG3C,KAAI,SAACuB,EAAGyC,GACvC,OACI,sBAAKf,UAAW,uBAAhB,UACI,qBAAKA,UAAW,2CAChBC,IAAK3B,EAAEE,IACP0B,IAAK5B,EAAEZ,OAEP,mBAAGsC,UAAW,+BAAd,SAA8C1B,EAAEZ,OAChD,mBAAGsC,UAAW,gCAAgCH,MAAO,CAACmB,MAAM,WAA5D,SACK1C,EAAEC,cAPiCwC,MAe9CkC,EAAmBf,EAAaxC,MAAM,EAAG,GAAG3C,KAAI,SAAC4C,EAAMC,GACzD,OACI,sBAAKI,UAAW,oBAAhB,UACI,qBAAKA,UAAW,OAAhB,SACI,cAAC,IAAD,CAAMS,GAAE,iBAAad,EAAK1C,IAA1B,SACI,qBAAK+C,UAAW,YAAYC,IAAKN,EAAKtC,OAAQ6C,IAAKP,EAAKvC,YAIhE,sBAAK4C,UAAW,OAAhB,UACI,mBAAGH,MAAQ,CAACa,WAAY,UAAxB,SAAoCf,EAAKvC,QACzC,6CAAgBuC,EAAKpC,UACrB,cAAC,IAAD,CACAoD,MAAOhB,EAAKpC,OACZqD,KAAM,GACNC,OAAQ,iBAbyBjB,MAsBjD,OACG,sBAAKI,UAAW,YAAhB,UACI,sBAAKA,UAAW,WAAhB,UACI,cAACqC,EAAD,CACCa,KAAMxB,EACNyB,OAAQ,WACJxB,GAAU,MAGf,sBAAK3B,UAAW,kBAAkBH,MAAO,CAACE,MAAM,QAAhD,UACK,qBACIC,UAAW,YACXC,IAAG,6CAAwC2B,EAAOwB,eAClDlD,IAAK0B,EAAOxE,QAEhB,qBAAK4C,UAAW,kBAAhB,SACD,mBACCO,QAAS,kBAAMoB,GAAU,IACzB3B,UAAW,qBACXH,MAAO,CAACO,SAAU,GAAIY,MAAO,UAAWqC,OAAQ,eAKrD,qBAAKrD,UAAW,mBAAmBH,MAAO,CAACM,UAAW,SAAUC,SAAU,IAA1E,SAEMwB,EAAOxE,cAKhB,qBAAK4C,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,mBAAGH,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAAzC,uBAKR,qBAAKV,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,oBAAIA,UAAW,cAAf,SACKlB,GAAUsD,QAOvB,sBAAKpC,UAAW,WAAhB,UACI,sBAAKA,UAAW,MAAhB,UACI,qBAAKA,UAAW,cAAhB,SACI,cAAC,IAAD,CACIW,MAAOiB,EAAO0B,aACd1C,KAAM,GACNC,OAAQ,cAMhB,sBAAKb,UAAW,OAAhB,UACI,mBAAGH,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAAzC,sBAGCkB,EAAOtE,eAMhB,sBAAK0C,UAAW,WAAhB,UACI,sBAAKA,UAAW,WAAhB,UACI,mBAAGH,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAAzC,0BACA,mBAAGb,MAAO,CAACmB,MAAO,WAAlB,SAA+BY,EAAO2B,kBAI1C,sBAAKvD,UAAW,WAAhB,UACI,mBAAGH,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAAzC,sBACA,mBAAGb,MAAO,CAACmB,MAAO,WAAlB,SAA+BY,EAAO4B,aAI1C,sBAAKxD,UAAW,WAAhB,UACI,mBAAGH,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAAzC,oBACA,mBAAGb,MAAO,CAACmB,MAAO,WAAlB,SAA+BY,EAAO6B,YAI1C,sBAAKzD,UAAW,WAAhB,UACI,mBAAGH,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAAzC,sBACA,mBAAGb,MAAO,CAACmB,MAAO,WAAlB,SAA+BY,EAAO8B,oBAOlD,qBAAK1D,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,mBAAGH,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAAzC,uBAKR,qBAAKV,UAAW,WAAhB,SAA4BgD,IAE5B,qBAAKhD,UAAW,WAAhB,SACI,qBAAKA,UAAW,MAAhB,SACI,mBAAGH,MAAO,CAACmB,MAAO,UAAWN,WAAY,UAAzC,gCAKR,qBAAKV,UAAW,WAAhB,SACKiD,OC1NFU,MAXR,WACL,OACE,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWnF,EAAMoF,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWrC,U,OCF5CuC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a4b07157.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiKey = \"dcf2ec03be1f0a8e3533da7bf20d7832\";\r\nconst url =\"https://api.themoviedb.org/3\";\r\nconst nowPlayingUrl = `${url}/movie/now_playing`;\r\nconst topRatedUrl = `${url}/movie/top_rated`;\r\nconst movieUrl =`${url}/movie`;\r\nconst genreUrl =`${url}/genre/movie/list`;\r\nconst moviesUrl =`${url}/discover/movie`;\r\nconst personUrl =`${url}/trending/person/week`;\r\n\r\nexport const fetchMovies = async () => {\r\n    try{\r\n        const {data} = await axios.get(nowPlayingUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: \"en_US\",\r\n                page: 1\r\n            }\r\n        })\r\n\r\n        const posterUrl = \"https://image.tmdb.org/t/p/original/\"\r\n        const modifiedData = data[\"results\"].map((m) => ({\r\n            id: m[\"id\"],\r\n            backPoster: posterUrl + m[\"backdrop_path\"],\r\n            popularity: m[\"popularith\"],\r\n            title: m[\"title\"],\r\n            poster: posterUrl + m[\"poster_path\"],\r\n            overview: m[\"overview\"],\r\n            rating: m[\"vote_average\"]\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch (error){ }\r\n}\r\n\r\nexport const fetchGenre = async () => {\r\n    try{\r\n        const {data} = await axios.get(genreUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: \"en_US\",\r\n                page: 1 \r\n            }\r\n        })\r\n        const modifiedData = data[\"genres\"].map((g) =>({\r\n            id: g[\"id\"],\r\n            name: g[\"name\"]\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) {}\r\n}\r\n\r\nexport const fetchMovieByGenre = async (genre_id) => {\r\n    try{\r\n        const {data} = await axios.get(moviesUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: \"en_US\",\r\n                page: 1,\r\n                with_genres: genre_id \r\n            }    \r\n        })\r\n\r\n        const posterUrl = \"https://image.tmdb.org/t/p/original/\";\r\n        const modifiedData = data[\"results\"].map((m) => ({\r\n            id: m[\"id\"],\r\n            backPoster: posterUrl + m[\"backdrop_path\"],\r\n            popularity: m[\"popularith\"],\r\n            title: m[\"title\"],\r\n            poster: posterUrl + m[\"poster_path\"],\r\n            overview: m[\"overview\"],\r\n            rating: m[\"vote_average\"]\r\n        }))\r\n\r\n        return modifiedData;\r\n    }catch (error){ }\r\n}\r\n\r\nexport const fetchPersons =  async () => {\r\n    try{\r\n        const {data} = await axios.get(personUrl, {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        })\r\n        const modifiedData = data[\"results\"].map((p)=>({\r\n            id: p[\"id\"],\r\n            popularity: p[\"popularity\"],\r\n            name: p[\"name\"],\r\n            profileImg: \"https://image.tmdb.org/t/p/w200\" + p[\"profile_path\"],\r\n            known: p[\"known_for_department\"]\r\n\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}\r\n\r\nexport const fetchTopRatedMovie = async () => {\r\n    try{\r\n        const {data} = await axios.get(topRatedUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: \"en_US\",\r\n                page: 1\r\n            }  \r\n        })\r\n        const posterUrl = \"https://image.tmdb.org/t/p/original/\"\r\n        const modifiedData = data[\"results\"].map((m) => ({\r\n            id: m[\"id\"],\r\n            backPoster: posterUrl + m[\"backdrop_path\"],\r\n            popularity: m[\"popularith\"],\r\n            title: m[\"title\"],\r\n            poster: posterUrl + m[\"poster_path\"],\r\n            overview: m[\"overview\"],\r\n            rating: m[\"vote_average\"]\r\n        }))\r\n\r\n        return modifiedData;\r\n    }catch (error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchMovieDetail = async (id) => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}` , {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: \"en_US\"\r\n            }\r\n        });\r\n        return data;\r\n    }catch (error) { }\r\n}\r\n\r\nexport const fetchMovieVideos = async (id) => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}/videos`, {\r\n            params: {\r\n                api_key: apiKey\r\n            }   \r\n        });\r\n        return data[\"results\"] [0];\r\n    }catch (error) { }\r\n}\r\n\r\nexport const fetchCasts = async (id) => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}/credits`, {\r\n            params: {\r\n                api_key: apiKey\r\n            }   \r\n        });\r\n        const modifiedData = data[\"cast\"].map((c)=> ({\r\n            id: c[\"cast_id\"],\r\n            character: c[\"character\"],\r\n            name: c[\"name\"],\r\n            img: \"https://image.tmdb.org/t/p/w200\" + c[\"profile_path\"]\r\n\r\n        }))\r\n\r\n        return modifiedData;\r\n    }catch (error) { }  \r\n}\r\n\r\nexport const fetchSimilarMovie = async (id) => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}/similar`, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: \"en_US\"\r\n            }   \r\n        });\r\n\r\n        const posterUrl = \"https://image.tmdb.org/t/p/original/\"\r\n        const modifiedData = data[\"results\"].map((m) => ({\r\n            id: m[\"id\"],\r\n            backPoster: posterUrl + m[\"backdrop_path\"],\r\n            popularity: m[\"popularith\"],\r\n            title: m[\"title\"],\r\n            poster: posterUrl + m[\"poster_path\"],\r\n            overview: m[\"overview\"],\r\n            rating: m[\"vote_average\"]\r\n        }))\r\n\r\n        return modifiedData;\r\n        \r\n    }catch (error) { }\r\n}\r\n\r\n\r\n\r\n","//import ReactDOM from \"react-dom\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport {Carousel} from \"react-responsive-carousel\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchGenre, fetchMovies, fetchMovieByGenre, fetchPersons, fetchTopRatedMovie } from '../../service';\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\n\r\n\r\n\r\n\r\nexport function Home () {\r\n\r\n    const [nowPlaying, setNowPlaying] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const [movieByGenre, setMovieByGenre] = useState([]);\r\n    const [persons, setPersons] = useState([]);\r\n    const [topRated, setTopRated] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setNowPlaying(await fetchMovies());\r\n            setGenres(await fetchGenre());\r\n            setMovieByGenre(await fetchMovieByGenre(28));\r\n            setPersons(await fetchPersons());\r\n            setTopRated(await fetchTopRatedMovie());\r\n        };\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const handleGenreClick = async (genre_id) =>{\r\n        setMovieByGenre(await fetchMovieByGenre(genre_id));\r\n    };\r\n\r\n    const movies = nowPlaying.slice(0, 10).map((item, index) =>{\r\n        //Muestra el carrousel con sus botones a sus costados \r\n        return(\r\n            <div style= {{ height: 500, width: \"100%\" }} key= {index}>\r\n                <div className= \"carousel-center\">\r\n                    <img style= {{height: 500, width: 900 }} src= {item.backPoster} alt= {item.title} />\r\n\r\n                </div>\r\n                 <div className= \"carousel-center\">\r\n                    {/* <i className= \"far fa-play-circle\" style={{fontSize: 95, color: \"#0f9ee8\"}} ></i> */}\r\n                </div> \r\n                <div className= \"carousel-caption\"\r\n                     style={{textAlign: \"center\", fontSize: 35}} \r\n                     >\r\n                        {item.title}\r\n                    </div>\r\n                    \r\n            </div>\r\n        );\r\n    });\r\n\r\n    //Genero una lista variada de géneros clickleables\r\n    const genreList = genres.map((item, index) =>{\r\n        return(\r\n            <li className= \"list-inline-item\" key={index}>\r\n                <button \r\n                    type= \"button\"\r\n                    className= \"btn btn-outline-info\" \r\n                    onClick={() => {\r\n                      handleGenreClick(item.id);\r\n                    }}>\r\n                    {item.name}\r\n\r\n                </button>\r\n\r\n            </li>\r\n        );\r\n    });\r\n\r\n    const movieList = movieByGenre.slice(0, 4).map((item, index)=>{\r\n        return(\r\n            <div className= \"col-md-3 col-sm-6\" key={index}>\r\n                <div className= \"card\">\r\n                    <Link to ={`/movie/${item.id}`}>\r\n                        <img className= \"img-fluid\" src={item.poster} alt={item.title}></img>\r\n                    </Link>\r\n\r\n                </div>\r\n                <div className= \"mt-3\">\r\n                    <p style= {{fontWeight: \"bolder\"}}>{item.title}</p>\r\n                    <p>More Rated: {item.rating}</p>\r\n                    <ReactStars \r\n                    count={item.rating} \r\n                    size={20} \r\n                    color1={\"#f4c10f\"}\r\n                    ></ReactStars>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const trendingPersons = persons.slice(0, 4).map((p, i) =>{\r\n        return(\r\n            <div className= \"col-md-3 text-center\" key={i}>\r\n                <img className= \"img-fluid rounded-circle mx-auto d-block\" \r\n                src={p.profileImg} \r\n                alt={p.name}\r\n                ></img>\r\n                <p className= \"font-weight-bold text-center\">{p.name}</p>\r\n                <p className= \"font-weight-light text-center\" style={{color:\"#0f9ee8\"}}>\r\n                    Trending for {p.known}\r\n                </p>   \r\n\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const topRatedList = topRated.slice(0, 4).map((item, index) =>{\r\n        return(\r\n            <div className= \"cold-md-3\" key={index}>\r\n                <div className= \"card\">\r\n                    <Link to={`/movie/${item.id}`}>\r\n                        <img className= \"img-fluid\" src={item.poster} alt={item.title}></img>\r\n                    </Link>\r\n\r\n                </div>\r\n                <div className= \"mt-3\">\r\n                    <p style= {{fontWeight: \"bolder\"}}>{item.title}</p>\r\n                    <p>More Rated: {item.rating}</p>\r\n                    <ReactStars \r\n                    count={item.rating} \r\n                    size={20} \r\n                    color1={\"#f4c10f\"}\r\n                    ></ReactStars>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className= \"container\">\r\n            <div className= \"row mt-2\">\r\n                <div className= \"col\">\r\n                    <Carousel \r\n                        autoPlay={true}\r\n                        pauseOnVisibility={true}\r\n                        slidesshowSpeed={5000}\r\n                        version={4}\r\n                        indicators ={false}\r\n                    >\r\n                        {movies}\r\n                    </Carousel>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <ul className= \"list-inline\">{genreList}</ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <div className= \"float-right\">\r\n                        <i className= \"far fa-arrow-alt-circle-right\"></i>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className= \"row mt-3\">{movieList}</div>\r\n\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <p className= \"font-weight-bold\" style={{color:\"#0f9ee8\"}}>\r\n                        TRENDING PERSONS ON THIS WEEK\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <div className= \"float-right\">\r\n                        <i className= \"far fa-arrow-alt-circle-right\"></i>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className= \"row mt-3\">\r\n                {trendingPersons}\r\n            </div>\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <p className= \"font-weight-bold\" style={{color:\"#0f9ee8\"}}>\r\n                        TOP RATED MOVIES\r\n                    </p>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <div className= \"float-right\">\r\n                        <i className= \"far fa-arrow-alt-circle-right\"></i>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className= \"row row-cols-1 row-cols-sm-2 row-cols-md-4\">{topRatedList}</div>\r\n\r\n            <hr className= \"mt-5\" style={{borderTop: \"1px solid #0f9ee8\"}}></hr>\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col-md-8 col-sm-6\" style={{color:\"#0f9ee8\"}}>\r\n                    <p>MADE BY KARINA WITH ❤</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport { fetchCasts, fetchMovieDetail, fetchMovieVideos, fetchSimilarMovie } from '../../service';\r\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function MovieDetail  ({match}) {\r\n    let params = match.params;\r\n    let genres = [];\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [detail, setDetail] = useState([]);\r\n    const [video, setVideo] = useState([]);\r\n    const [casts, setCasts] = useState([]);\r\n    const [similarMovie, setSimilarMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n            setDetail(await fetchMovieDetail(params.id));\r\n            setVideo(await fetchMovieVideos(params.id));\r\n            setCasts(await fetchCasts(params.id));\r\n            setSimilarMovie(await fetchSimilarMovie(params.id));\r\n        };\r\n        fetchAPI();\r\n    }, [params.id]);\r\n\r\n    genres = detail.genres;\r\n\r\n\r\n    const MoviePlayerModal = (props) =>{\r\n        const youtubeUrl = \"https://www.youtube.com/watch?v=\";\r\n        return(\r\n            <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title\r\n                        id=\"contained-modal-title-vcenter\"\r\n                        style={{color: \"#000000\", fontWeight: \"bolder\"}}\r\n                    >\r\n                        {detail.title}\r\n                    </Modal.Title>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body style={{backgroundColor: \"#000000\"}}>\r\n                    <ReactPlayer\r\n                        className= \"container-fluid\"\r\n                        url={youtubeUrl + video.key}\r\n                        playing\r\n                        width=\"100%\"\r\n                    >\r\n\r\n                    </ReactPlayer>\r\n                </Modal.Body>\r\n\r\n            </Modal>);\r\n    \r\n    };\r\n\r\n    let genresList;\r\n    if(genres){\r\n        genresList = genres.map((g, i) =>{\r\n            return(\r\n                <li className= \"list-inline-item\" key={i}>\r\n                <button\r\n                    type=\"button\"\r\n                    className= \"btn btn-outline-info\">\r\n                        {g.name}\r\n\r\n                </button>\r\n\r\n            </li>   \r\n            )\r\n        });\r\n    };\r\n\r\n    const castList = casts.slice(0, 4).map((c, i)=>{\r\n        return(\r\n            <div className= \"col-md-3 text-center\" key={i}>\r\n                <img className= \"img-fluid rounded-circle mx-auto d-block\" \r\n                src={c.img} \r\n                alt={c.name}\r\n                ></img>\r\n                <p className= \"font-weight-bold text-center\">{c.name}</p>\r\n                <p className= \"font-weight-light text-center\" style={{color:\"#0f9ee8\"}}>\r\n                    {c.character}\r\n                </p>   \r\n\r\n            </div>\r\n        );\r\n    });\r\n\r\n\r\n    const similarMovieList = similarMovie.slice(0, 4).map((item, index)=>{\r\n        return(\r\n            <div className= \"col-md-3 col-sm-6\" key={index}>\r\n                <div className= \"card\">\r\n                    <Link to ={`/movie/${item.id}`}>\r\n                        <img className= \"img-fluid\" src={item.poster} alt={item.title}></img>\r\n                    </Link>\r\n\r\n                </div>\r\n                <div className= \"mt-3\">\r\n                    <p style= {{fontWeight: \"bolder\"}}>{item.title}</p>\r\n                    <p>More Rated: {item.rating}</p>\r\n                    <ReactStars \r\n                    count={item.rating} \r\n                    size={20} \r\n                    color1={\"#f4c10f\"}\r\n                    ></ReactStars>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n       <div className= \"container\">\r\n           <div className= \"row mt-2\">\r\n               <MoviePlayerModal\r\n                show={isOpen}\r\n                onHide={()=>{\r\n                    setIsOpen(false);\r\n                }}\r\n               ></MoviePlayerModal>\r\n               <div className= \"col text-center\" style={{width:\"100%\"}} >\r\n                    <img \r\n                        className= \"img-fluid\"\r\n                        src={`http://image.tmdb.org/t/p/original/${detail.backdrop_path}`} \r\n                        alt={detail.title}\r\n                        ></img>\r\n                    <div className= \"carousel-center\">\r\n                   <i \r\n                    onClick={() => setIsOpen(true)}\r\n                    className= \"far fa-play-circle\"\r\n                    style={{fontSize: 95, color: \"#0f9ee8\", cursor: \"pointer\"}}\r\n                    \r\n                    ></i>\r\n\r\n               </div>\r\n               <div className= \"carousel-caption\" style={{textAlign: \"center\", fontSize: 35}}\r\n               >  \r\n                    {detail.title}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <p style={{color: \"#5a606b\", fontWeight: \"bolder\"}}>GENRE</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <ul className= \"list-inline\">\r\n                        {genres && genresList}\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <div className= \"text-center\">\r\n                        <ReactStars\r\n                            count={detail.vote_average}\r\n                            size={20}\r\n                            color1={\"#f4c10f\"}\r\n                        >\r\n\r\n                        </ReactStars>\r\n\r\n                    </div>\r\n                    <div className= \"mt-3\">\r\n                        <p style={{color: \"#5a606b\", fontWeight: \"bolder\"}}>\r\n                            OVERVIEW\r\n                        </p>\r\n                        {detail.overview}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className= \"roe mt-3\">\r\n                    <div className= \"col-md-3\">\r\n                        <p style={{color: \"#5a606b\", fontWeight: \"bolder\"}}>RELEASE DATE</p>\r\n                        <p style={{color: \"#f4c10f\"}}>{detail.release_date}</p>\r\n\r\n                    </div>\r\n\r\n                    <div className= \"col-md-3\">\r\n                        <p style={{color: \"#5a606b\", fontWeight: \"bolder\"}}>RUN TIME</p>\r\n                        <p style={{color: \"#f4c10f\"}}>{detail.runtime}</p>\r\n\r\n                    </div>\r\n\r\n                    <div className= \"col-md-3\">\r\n                        <p style={{color: \"#5a606b\", fontWeight: \"bolder\"}}>BUDGET</p>\r\n                        <p style={{color: \"#f4c10f\"}}>{detail.budget}</p>\r\n\r\n                    </div>\r\n\r\n                    <div className= \"col-md-3\">\r\n                        <p style={{color: \"#5a606b\", fontWeight: \"bolder\"}}>HOMEPAGE</p>\r\n                        <p style={{color: \"#f4c10f\"}}>{detail.homepage}</p>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <p style={{color: \"#5a606b\", fontWeight: \"bolder\"}}>CASTS</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className= \"row mt-3\">{castList}</div>\r\n\r\n            <div className= \"row mt-3\">\r\n                <div className= \"col\">\r\n                    <p style={{color: \"#5a606b\", fontWeight: \"bolder\"}}>SIMILAR MOVIES</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className= \"row mt-3\">\r\n                {similarMovieList}\r\n\r\n            </div>\r\n\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default MovieDetail;","import React from 'react';\r\nimport './App.css';\r\nimport {Switch, Route } from \"react-router-dom\";\r\nimport {Home} from './components/home/Home';\r\nimport {MovieDetail} from \"./components/moviedetail/MovieDetail\";\r\n \r\n\r\nexport function App() {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/movie/:id\" component={MovieDetail} />\r\n      </Switch>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}